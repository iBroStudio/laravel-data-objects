<?php

declare(strict_types=1);

namespace IBroStudio\DataObjects\Enums;

use Filament\Support\Contracts\HasLabel;
use Illuminate\Support\Str;

enum CountryEnum: string implements HasLabel
{
    case AF = 'AF';
    case AL = 'AL';
    case DZ = 'DZ';
    case AS = 'AS';
    case AD = 'AD';
    case AO = 'AO';
    case AI = 'AI';
    case AQ = 'AQ';
    case AG = 'AG';
    case AR = 'AR';
    case AM = 'AM';
    case AW = 'AW';
    case AU = 'AU';
    case AT = 'AT';
    case AZ = 'AZ';
    case BS = 'BS';
    case BH = 'BH';
    case BD = 'BD';
    case BB = 'BB';
    case BY = 'BY';
    case BE = 'BE';
    case BZ = 'BZ';
    case BJ = 'BJ';
    case BM = 'BM';
    case BT = 'BT';
    case BO = 'BO';
    case BA = 'BA';
    case BW = 'BW';
    case BV = 'BV';
    case BR = 'BR';
    case IO = 'IO';
    case BN = 'BN';
    case BG = 'BG';
    case BF = 'BF';
    case BI = 'BI';
    case KH = 'KH';
    case CM = 'CM';
    case CA = 'CA';
    case CV = 'CV';
    case KY = 'KY';
    case CF = 'CF';
    case TD = 'TD';
    case CL = 'CL';
    case CN = 'CN';
    case CX = 'CX';
    case CC = 'CC';
    case CO = 'CO';
    case KM = 'KM';
    case CG = 'CG';
    case CD = 'CD';
    case CK = 'CK';
    case CR = 'CR';
    case CI = 'CI';
    case HR = 'HR';
    case CU = 'CU';
    case CY = 'CY';
    case CZ = 'CZ';
    case DK = 'DK';
    case DJ = 'DJ';
    case DM = 'DM';
    case DO = 'DO';
    case EC = 'EC';
    case EG = 'EG';
    case SV = 'SV';
    case GQ = 'GQ';
    case ER = 'ER';
    case EE = 'EE';
    case ET = 'ET';
    case FK = 'FK';
    case FO = 'FO';
    case FJ = 'FJ';
    case FI = 'FI';
    case FR = 'FR';
    case GF = 'GF';
    case PF = 'PF';
    case TF = 'TF';
    case GA = 'GA';
    case GM = 'GM';
    case GE = 'GE';
    case DE = 'DE';
    case GH = 'GH';
    case GI = 'GI';
    case GR = 'GR';
    case GL = 'GL';
    case GD = 'GD';
    case GP = 'GP';
    case GU = 'GU';
    case GT = 'GT';
    case GN = 'GN';
    case GW = 'GW';
    case GY = 'GY';
    case HT = 'HT';
    case HM = 'HM';
    case VA = 'VA';
    case HN = 'HN';
    case HK = 'HK';
    case HU = 'HU';
    case IS = 'IS';
    case IN = 'IN';
    case ID = 'ID';
    case IR = 'IR';
    case IQ = 'IQ';
    case IE = 'IE';
    case IL = 'IL';
    case IT = 'IT';
    case JM = 'JM';
    case JP = 'JP';
    case JO = 'JO';
    case KZ = 'KZ';
    case KE = 'KE';
    case KI = 'KI';
    case KP = 'KP';
    case KR = 'KR';
    case KW = 'KW';
    case KG = 'KG';
    case LA = 'LA';
    case LV = 'LV';
    case LB = 'LB';
    case LS = 'LS';
    case LR = 'LR';
    case LY = 'LY';
    case LI = 'LI';
    case LT = 'LT';
    case LU = 'LU';
    case MO = 'MO';
    case MK = 'MK';
    case MG = 'MG';
    case MW = 'MW';
    case MY = 'MY';
    case MV = 'MV';
    case ML = 'ML';
    case MT = 'MT';
    case MH = 'MH';
    case MQ = 'MQ';
    case MR = 'MR';
    case MU = 'MU';
    case YT = 'YT';
    case MX = 'MX';
    case FM = 'FM';
    case MD = 'MD';
    case MC = 'MC';
    case MN = 'MN';
    case MS = 'MS';
    case MA = 'MA';
    case MZ = 'MZ';
    case MM = 'MM';
    case NA = 'NA';
    case NR = 'NR';
    case NP = 'NP';
    case NL = 'NL';
    case AN = 'AN';
    case NC = 'NC';
    case NZ = 'NZ';
    case NI = 'NI';
    case NE = 'NE';
    case NG = 'NG';
    case NU = 'NU';
    case NF = 'NF';
    case MP = 'MP';
    case NO = 'NO';
    case OM = 'OM';
    case PK = 'PK';
    case PW = 'PW';
    case PS = 'PS';
    case PA = 'PA';
    case PG = 'PG';
    case PY = 'PY';
    case PE = 'PE';
    case PH = 'PH';
    case PN = 'PN';
    case PL = 'PL';
    case PT = 'PT';
    case PR = 'PR';
    case QA = 'QA';
    case RE = 'RE';
    case RO = 'RO';
    case RU = 'RU';
    case RW = 'RW';
    case SH = 'SH';
    case KN = 'KN';
    case LC = 'LC';
    case PM = 'PM';
    case VC = 'VC';
    case WS = 'WS';
    case SM = 'SM';
    case ST = 'ST';
    case SA = 'SA';
    case SN = 'SN';
    case CS = 'CS';
    case SC = 'SC';
    case SL = 'SL';
    case SG = 'SG';
    case SK = 'SK';
    case SI = 'SI';
    case SB = 'SB';
    case SO = 'SO';
    case ZA = 'ZA';
    case GS = 'GS';
    case ES = 'ES';
    case LK = 'LK';
    case SD = 'SD';
    case SR = 'SR';
    case SJ = 'SJ';
    case SZ = 'SZ';
    case SE = 'SE';
    case CH = 'CH';
    case SY = 'SY';
    case TW = 'TW';
    case TJ = 'TJ';
    case TZ = 'TZ';
    case TH = 'TH';
    case TL = 'TL';
    case TG = 'TG';
    case TK = 'TK';
    case TO = 'TO';
    case TT = 'TT';
    case TN = 'TN';
    case TR = 'TR';
    case TM = 'TM';
    case TC = 'TC';
    case TV = 'TV';
    case UG = 'UG';
    case UA = 'UA';
    case AE = 'AE';
    case GB = 'GB';
    case US = 'US';
    case UM = 'UM';
    case UY = 'UY';
    case UZ = 'UZ';
    case VU = 'VU';
    case VE = 'VE';
    case VN = 'VN';
    case VG = 'VG';
    case VI = 'VI';
    case WF = 'WF';
    case EH = 'EH';
    case YE = 'YE';
    case ZM = 'ZM';
    case ZW = 'ZW';

    public static function fromName(string $name): self
    {
        $name = Str::upper($name);

        return match ($name) {
            'UK' => self::GB,
            default => constant("self::$name"),
        };
    }

    public function getLabel(): ?string
    {
        return match ($this) {
            self::AF => 'Afghanistan',
            self::AL => 'Albania',
            self::DZ => 'Algeria',
            self::AS => 'American Samoa',
            self::AD => 'Andorra',
            self::AO => 'Angola',
            self::AI => 'Anguilla',
            self::AQ => 'Antarctica',
            self::AG => 'Antigua and Barbuda',
            self::AR => 'Argentina',
            self::AM => 'Armenia',
            self::AW => 'Aruba',
            self::AU => 'Australia',
            self::AT => 'Austria',
            self::AZ => 'Azerbaijan',
            self::BS => 'Bahamas',
            self::BH => 'Bahrain',
            self::BD => 'Bangladesh',
            self::BB => 'Barbados',
            self::BY => 'Belarus',
            self::BE => 'Belgium',
            self::BZ => 'Belize',
            self::BJ => 'Benin',
            self::BM => 'Bermuda',
            self::BT => 'Bhutan',
            self::BO => 'Bolivia',
            self::BA => 'Bosnia and Herzegovina',
            self::BW => 'Botswana',
            self::BV => 'Bouvet Island',
            self::BR => 'Brazil',
            self::IO => 'British Indian Ocean Territory',
            self::BN => 'Brunei Darussalam',
            self::BG => 'Bulgaria',
            self::BF => 'Burkina Faso',
            self::BI => 'Burundi',
            self::KH => 'Cambodia',
            self::CM => 'Cameroon',
            self::CA => 'Canada',
            self::CV => 'Cape Verde',
            self::KY => 'Cayman Islands',
            self::CF => 'Central African Republic',
            self::TD => 'Chad',
            self::CL => 'Chile',
            self::CN => 'China',
            self::CX => 'Christmas Island',
            self::CC => 'Cocos (Keeling) Islands',
            self::CO => 'Colombia',
            self::KM => 'Comoros',
            self::CG => 'Congo',
            self::CD => 'Congo, the Democratic Republic of the',
            self::CK => 'Cook Islands',
            self::CR => 'Costa Rica',
            self::CI => "Cote D'Ivoire",
            self::HR => 'Croatia',
            self::CU => 'Cuba',
            self::CY => 'Cyprus',
            self::CZ => 'Czech Republic',
            self::DK => 'Denmark',
            self::DJ => 'Djibouti',
            self::DM => 'Dominica',
            self::DO => 'Dominican Republic',
            self::EC => 'Ecuador',
            self::EG => 'Egypt',
            self::SV => 'El Salvador',
            self::GQ => 'Equatorial Guinea',
            self::ER => 'Eritrea',
            self::EE => 'Estonia',
            self::ET => 'Ethiopia',
            self::FK => 'Falkland Islands (Malvinas)',
            self::FO => 'Faroe Islands',
            self::FJ => 'Fiji',
            self::FI => 'Finland',
            self::FR => 'France',
            self::GF => 'French Guiana',
            self::PF => 'French Polynesia',
            self::TF => 'French Southern Territories',
            self::GA => 'Gabon',
            self::GM => 'Gambia',
            self::GE => 'Georgia',
            self::DE => 'Germany',
            self::GH => 'Ghana',
            self::GI => 'Gibraltar',
            self::GR => 'Greece',
            self::GL => 'Greenland',
            self::GD => 'Grenada',
            self::GP => 'Guadeloupe',
            self::GU => 'Guam',
            self::GT => 'Guatemala',
            self::GN => 'Guinea',
            self::GW => 'Guinea-Bissau',
            self::GY => 'Guyana',
            self::HT => 'Haiti',
            self::HM => 'Heard Island and Mcdonald Islands',
            self::VA => 'Holy See (Vatican City State)',
            self::HN => 'Honduras',
            self::HK => 'Hong Kong',
            self::HU => 'Hungary',
            self::IS => 'Iceland',
            self::IN => 'India',
            self::ID => 'Indonesia',
            self::IR => 'Iran, Islamic Republic of',
            self::IQ => 'Iraq',
            self::IE => 'Ireland',
            self::IL => 'Israel',
            self::IT => 'Italy',
            self::JM => 'Jamaica',
            self::JP => 'Japan',
            self::JO => 'Jordan',
            self::KZ => 'Kazakhstan',
            self::KE => 'Kenya',
            self::KI => 'Kiribati',
            self::KP => "Korea, Democratic People's Republic of",
            self::KR => 'Korea, Republic of',
            self::KW => 'Kuwait',
            self::KG => 'Kyrgyzstan',
            self::LA => "Lao People's Democratic Republic",
            self::LV => 'Latvia',
            self::LB => 'Lebanon',
            self::LS => 'Lesotho',
            self::LR => 'Liberia',
            self::LY => 'Libyan Arab Jamahiriya',
            self::LI => 'Liechtenstein',
            self::LT => 'Lithuania',
            self::LU => 'Luxembourg',
            self::MO => 'Macao',
            self::MK => 'Macedonia, the Former Yugoslav Republic of',
            self::MG => 'Madagascar',
            self::MW => 'Malawi',
            self::MY => 'Malaysia',
            self::MV => 'Maldives',
            self::ML => 'Mali',
            self::MT => 'Malta',
            self::MH => 'Marshall Islands',
            self::MQ => 'Martinique',
            self::MR => 'Mauritania',
            self::MU => 'Mauritius',
            self::YT => 'Mayotte',
            self::MX => 'Mexico',
            self::FM => 'Micronesia, Federated States of',
            self::MD => 'Moldova, Republic of',
            self::MC => 'Monaco',
            self::MN => 'Mongolia',
            self::MS => 'Montserrat',
            self::MA => 'Morocco',
            self::MZ => 'Mozambique',
            self::MM => 'Myanmar',
            self::NA => 'Namibia',
            self::NR => 'Nauru',
            self::NP => 'Nepal',
            self::NL => 'Netherlands',
            self::AN => 'Netherlands Antilles',
            self::NC => 'New Caledonia',
            self::NZ => 'New Zealand',
            self::NI => 'Nicaragua',
            self::NE => 'Niger',
            self::NG => 'Nigeria',
            self::NU => 'Niue',
            self::NF => 'Norfolk Island',
            self::MP => 'Northern Mariana Islands',
            self::NO => 'Norway',
            self::OM => 'Oman',
            self::PK => 'Pakistan',
            self::PW => 'Palau',
            self::PS => 'Palestinian Territory, Occupied',
            self::PA => 'Panama',
            self::PG => 'Papua New Guinea',
            self::PY => 'Paraguay',
            self::PE => 'Peru',
            self::PH => 'Philippines',
            self::PN => 'Pitcairn',
            self::PL => 'Poland',
            self::PT => 'Portugal',
            self::PR => 'Puerto Rico',
            self::QA => 'Qatar',
            self::RE => 'Reunion',
            self::RO => 'Romania',
            self::RU => 'Russian Federation',
            self::RW => 'Rwanda',
            self::SH => 'Saint Helena',
            self::KN => 'Saint Kitts and Nevis',
            self::LC => 'Saint Lucia',
            self::PM => 'Saint Pierre and Miquelon',
            self::VC => 'Saint Vincent and the Grenadines',
            self::WS => 'Samoa',
            self::SM => 'San Marino',
            self::ST => 'Sao Tome and Principe',
            self::SA => 'Saudi Arabia',
            self::SN => 'Senegal',
            self::CS => 'Serbia and Montenegro',
            self::SC => 'Seychelles',
            self::SL => 'Sierra Leone',
            self::SG => 'Singapore',
            self::SK => 'Slovakia',
            self::SI => 'Slovenia',
            self::SB => 'Solomon Islands',
            self::SO => 'Somalia',
            self::ZA => 'South Africa',
            self::GS => 'South Georgia and the South Sandwich Islands',
            self::ES => 'Spain',
            self::LK => 'Sri Lanka',
            self::SD => 'Sudan',
            self::SR => 'Suriname',
            self::SJ => 'Svalbard and Jan Mayen',
            self::SZ => 'Swaziland',
            self::SE => 'Sweden',
            self::CH => 'Switzerland',
            self::SY => 'Syrian Arab Republic',
            self::TW => 'Taiwan, Province of China',
            self::TJ => 'Tajikistan',
            self::TZ => 'Tanzania, United Republic of',
            self::TH => 'Thailand',
            self::TL => 'Timor-Leste',
            self::TG => 'Togo',
            self::TK => 'Tokelau',
            self::TO => 'Tonga',
            self::TT => 'Trinidad and Tobago',
            self::TN => 'Tunisia',
            self::TR => 'Turkey',
            self::TM => 'Turkmenistan',
            self::TC => 'Turks and Caicos Islands',
            self::TV => 'Tuvalu',
            self::UG => 'Uganda',
            self::UA => 'Ukraine',
            self::AE => 'United Arab Emirates',
            self::GB => 'United Kingdom',
            self::US => 'United States',
            self::UM => 'United States Minor Outlying Islands',
            self::UY => 'Uruguay',
            self::UZ => 'Uzbekistan',
            self::VU => 'Vanuatu',
            self::VE => 'Venezuela',
            self::VN => 'Viet Nam',
            self::VG => 'Virgin Islands, British',
            self::VI => 'Virgin Islands, U.s.',
            self::WF => 'Wallis and Futuna',
            self::EH => 'Western Sahara',
            self::YE => 'Yemen',
            self::ZM => 'Zambia',
            self::ZW => 'Zimbabwe',
        };
    }
}
